<?php/** * PHPExcel * * Copyright (C) 2006 - 2014 PHPExcel * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA * * @category   PHPExcel * @package    PHPExcel * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel) * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL * @version    1.8.0, 2014-03-02 */class ControllerReportExportCustomerid extends Controller {		public function get_parrent($customer_id){		$this->load->model('sale/customer');		$parrent = $this -> model_sale_customer -> get_customer_parrent($customer_id);		if(count($parrent) > 0){			return $parrent['username'];		}		return 'null';			}	public function get_customer_p_binary($customer_id){		$this->load->model('sale/customer');		$parrent = $this -> model_sale_customer -> get_customer_by_p_binary($customer_id);		if(count($parrent) > 0){			return $parrent['username'];		}		return 'null';	}		public function goidautu($customer_id){		$this->load->model('sale/customer');		$goidautu = $this -> model_sale_customer -> getgoidautu($customer_id);		$goidautu = doubleval($goidautu['filled']);		return $goidautu;	}	public function hoahongconghuong($customer_id){		$this -> load -> model('sale/customer');		$check_f1_left = $this -> binary_left($customer_id);		$check_f1_right  = $this -> binary_right($customer_id);		$getgoidautu =$this -> model_sale_customer ->getgoidautu($customer_id);		//print_r($check_f1_left); die;		if (doubleval($getgoidautu['filled']) > 0 && intval($check_f1_left) === 1 && intval($check_f1_right) === 1 )        {  			$count = $this -> model_sale_customer ->  hoahongconghuong($customer_id);									//print_r($getgoidautu['filled']); die;			$total_binary = 0;			if (doubleval($count['total_pd_left']) >= doubleval($count['total_pd_right']))			{									$total_binary = doubleval($count['total_pd_right']); 								$this -> model_sale_customer -> update_total_pd_left(doubleval($count['total_pd_left']) - doubleval($count['total_pd_right']), $customer_id);				$this -> model_sale_customer -> update_total_pd_right(0, $customer_id);			}			else			{							$total_binary = doubleval($count['total_pd_left']);									$this -> model_sale_customer -> update_total_pd_right(doubleval($count['total_pd_right']) - doubleval($count['total_pd_left']), $customer_id);				$this -> model_sale_customer -> update_total_pd_left(0, $customer_id);			}			if (doubleval($getgoidautu['filled']) == 2500000)			{				if ($total_binary >= 2500000)				{					$total_binary = 2500000;				}			}			$this -> model_sale_customer -> savetam($customer_id,"Network", $total_binary);			$data['total'] = $total_binary;			$data['pd_left'] = doubleval($count['total_pd_left']);			$data['pd_right'] = doubleval($count['total_pd_right']);			$data['goidautu'] = doubleval($getgoidautu['filled']);			return $data;		}		else		{			$data['total'] = 0;			return $data;		}			}	public function binary_right($customer_id){		$this -> load -> model('sale/customer');		$check_f1 = $this -> model_sale_customer -> check_p_node_binary_($customer_id);		$listId= '';		foreach ($check_f1 as $item) {			$listId .= ',' . $item['customer_id'];		}		$arrId = substr($listId, 1);		// $arrId = explode(',', $arrId);		$count = $this -> model_sale_customer ->  getCustomer_ML($customer_id);		if(intval($count['right']) === 0){			$customer_binary = ',0';		}else{			$id = $count['right'];			$count = $this -> model_sale_customer -> getCount_ID_BinaryTreeCustom($count['right']);			$customer_binary = $count.','.$id;		}		$customer_binary = substr($customer_binary, 1);		// $customer_binary = explode(',', $customer_binary);		$array = $arrId.','.$customer_binary;		$array = explode(',', $array);				$array = array_count_values($array);				$array = in_array(2, $array) ? 1 : 0;		return $array;	}	public function binary_left($customer_id){		$this -> load -> model('sale/customer');				$check_f1 = $this -> model_sale_customer -> check_p_node_binary_($customer_id);				$listId= '';		foreach ($check_f1 as $item) {			$listId .= ',' . $item['customer_id'];		}		$arrId = substr($listId, 1);		// $arrId = explode(',', $arrId);		$count = $this -> model_sale_customer ->  getCustomer_ML($customer_id);		if(intval($count['left']) === 0){			$customer_binary = ',0';		}else{			$id = $count['left'];			$count = $this -> model_sale_customer -> getCount_ID_BinaryTreeCustom($count['left']);			$customer_binary = $count.','.$id;		}		$customer_binary = substr($customer_binary, 1);		// $customer_binary = explode(',', $customer_binary);		$array = $arrId.','.$customer_binary;		$array = explode(',', $array);		$array = array_count_values($array);		$array = in_array(2, $array) ? 1 : 0;		return $array;	}	public function export_commission_binary() {	error_reporting(E_ALL);	ini_set('display_errors', TRUE);	ini_set('display_startup_errors', TRUE);	date_default_timezone_set('Europe/London');	if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');	require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('sale/customer');		$this->load->model('sale/customer');		//update time show button		//$this ->model_sale_customer ->update_show_button_binary();		$this -> session ->data['export'] = "export";		$results = $this -> model_sale_customer -> getall_commission_binary();				if (count($results) == 0){			$this -> session ->data['export'] = "nodata";		?>		<script type="text/javascript">			window.location.replace("index.php?route=pd/statistical&token=<?php echo $_GET['token'];?>");		</script>		<?php		}		//echo "<pre>"; print_r($results); echo "</pre>"; die();		//echo "<pre>"; print_r($results); echo "</pre>"; die();		!count($results) > 0 && die('no data!');		$objPHPExcel = new PHPExcel();		$objPHPExcel->getProperties()->setCreator("Hoivien")						 ->setLastModifiedBy("Hoivien")						 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setDescription($this->language->get('heading_title'))						 ->setKeywords("office 2007 openxml php")						 ->setCategory("Test result file");		$objPHPExcel->setActiveSheetIndex(0)		->setCellValue('A1', 'STT')		->setCellValue('B1', 'Username')		->setCellValue('C1', 'Họ tên')		->setCellValue('D1', 'Tên tài khoản')		->setCellValue('E1', 'Số tài khoản')        ->setCellValue('F1', 'Ngân hàng')        ->setCellValue('G1', 'Chi nhánh')        ->setCellValue('H1', 'Số tiền')        ->setCellValue('I1', 'Số điện thoại');         $objPHPExcel->getActiveSheet()->getStyle('A1:I1')        ->applyFromArray(                array(                    'fill' => array(                        'type' => PHPExcel_Style_Fill::FILL_SOLID,                        'color' => array('rgb' => '0066FF')                    )                )            );            $styleArray = array(                'font'  => array(                    'bold'  => true,                    'color' => array('rgb' => 'FFFFFF'),                    'size'  => 12,                    'name'  => 'Arial'                ));        $objPHPExcel->getActiveSheet()->getStyle('A1:I1')->applyFromArray($styleArray);		$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);		$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);		$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(20);		$h=0;		$n = 2;		$i=0;				$tongtien = 0;		foreach ($results as $customer) {								$hoahongconghuong = $this -> hoahongconghuong($customer['customer_id']);			//echo "<pre>"; print_r($hoahongconghuong); echo "</pre>"; die();			if (doubleval($hoahongconghuong['total']) > 0) {									$this -> model_sale_customer -> saveTranstionHistory(                $customer['customer_id'],                 "Hoa hồng đội nhóm",                 "+ ".(number_format($hoahongconghuong['total']))." VNĐ",                 "Nhận hoa hồng đội nhóm ".(number_format($hoahongconghuong['total']))." VNĐ)",                1,                0,                 $url = ''            ); 			$i++;			$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$i);			$objPHPExcel->getActiveSheet()->setCellValue('B'.$n," ".$customer['username']);			$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['firstname']);			$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['account_holder']);			$objPHPExcel->getActiveSheet()->setCellValue('E'.$n, " ".$customer['account_number']);			$objPHPExcel->getActiveSheet()->setCellValue('F'.$n,$customer['bank_name']);			$objPHPExcel->getActiveSheet()->setCellValue('G'.$n,$customer['branch_bank']);			$objPHPExcel->getActiveSheet()->setCellValue('H'.$n,number_format(doubleval($hoahongconghuong['total'])));			$objPHPExcel->getActiveSheet()->setCellValue('I'.$n," ".$customer['telephone']);			$n++;			$tongtien += doubleval($hoahongconghuong['total']);			}		}		$dong = $n+1;		$objPHPExcel->getActiveSheet()->setCellValue('G'.$dong,"Tổng Tiền");		$objPHPExcel->getActiveSheet()->setCellValue('H'.$dong,number_format($tongtien));		$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'I'.$n)		->applyFromArray(			array('font'  => array(				'bold'  => true,				'size'  => 12,				'name'  => 'Arial'			))		);		// Rename worksheet		$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));		// Set active sheet index to the first sheet, so Excel opens this as the first sheet		$objPHPExcel->setActiveSheetIndex(0);		// Redirect output to a client’s web browser (Excel5)		date_default_timezone_set('Asia/Ho_Chi_Minh');		// Redirect output to a client’s web browser (Excel5)		header('Content-Type: application/vnd.ms-excel');		header('Content-Disposition: attachment;filename="HOA_HONG_NHANH_YEU_'.date('d').'_'.date('m').'_'.date('Y').'_'.date('H').'_'.date('i').'.xls"');		header('Cache-Control: max-age=0');		// If you're serving to IE 9, then the following may be needed		header('Cache-Control: max-age=1');		// If you're serving to IE over SSL, then the following may be needed		header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past		header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified		header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1		header ('Pragma: public'); // HTTP/1.0		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');		$objWriter->save('php://output');		exit;	}		public function export_c_wallet() {	error_reporting(E_ALL);	ini_set('display_errors', TRUE);	ini_set('display_startup_errors', TRUE);	date_default_timezone_set('Europe/London');	if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');	require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('sale/customer');		$this->load->model('sale/customer');		//update time show button		//$this ->model_sale_customer ->update_show_button_laihangngay();		$this -> session ->data['laihangngay'] = "laihangngay";		$results = $this -> model_sale_customer -> getall_m_wallet();		if (count($results) == 0){			$this -> session ->data['laihangngay'] = "nodata";		?>		<script type="text/javascript">			window.location.replace("index.php?route=pd/statistical&token=<?php echo $_GET['token'];?>");		</script>		<?php		}		//print_r($results); die;				!count($results) > 0 && die('no data!');		$objPHPExcel = new PHPExcel();		$objPHPExcel->getProperties()->setCreator("Hoivien")						 ->setLastModifiedBy("Hoivien")						 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setDescription($this->language->get('heading_title'))						 ->setKeywords("office 2007 openxml php")						 ->setCategory("Test result file");		$objPHPExcel->setActiveSheetIndex(0)		->setCellValue('A1', 'STT')		->setCellValue('B1', 'Username')		->setCellValue('C1', 'Họ tên')		->setCellValue('D1', 'Tên tài khoản')		->setCellValue('E1', 'Số tài khoản')		->setCellValue('F1', 'Số Tiền')        ->setCellValue('G1', 'Ngân hàng')        ->setCellValue('H1', 'Chi nhánh')        ->setCellValue('I1', 'Số điện thoại');         $objPHPExcel->getActiveSheet()->getStyle('A1:I1')        ->applyFromArray(                array(                    'fill' => array(                        'type' => PHPExcel_Style_Fill::FILL_SOLID,                        'color' => array('rgb' => '0066FF')                    )                )            );            $styleArray = array(                'font'  => array(                    'bold'  => true,                    'color' => array('rgb' => 'FFFFFF'),                    'size'  => 12,                    'name'  => 'Arial'                ));        $objPHPExcel->getActiveSheet()->getStyle('A1:L1')->applyFromArray($styleArray);		$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(6);		$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);		$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);		$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(14);		$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(14);		$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(20);		$h=0;		$n = 2;		$i=0;		$tongtien = 0;		foreach ($results as $customer) {					//			//update ví m 20%			$this -> model_sale_customer ->update_wallet_m_0($customer['customer_id']);			$this -> model_sale_customer -> savetam($customer['customer_id'],"Direct", $customer['amount']);			$i++;			//print_r($customer); die;			$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$i);			$objPHPExcel->getActiveSheet()->setCellValue('B'.$n," ".$customer['username']);			$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['firstname']);			$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['account_holder']);			$objPHPExcel->getActiveSheet()->setCellValue('E'.$n," ".$customer['account_number']);			$objPHPExcel->getActiveSheet()->setCellValue('F'.$n,number_format(doubleval($customer['amount'])));			$objPHPExcel->getActiveSheet()->setCellValue('G'.$n,$customer['bank_name']);			$objPHPExcel->getActiveSheet()->setCellValue('H'.$n,$customer['branch_bank']);			$objPHPExcel->getActiveSheet()->setCellValue('I'.$n," ".$customer['telephone']);			$n++;			$tongtien += doubleval($customer['amount']);		}		$dong = $n+1;		$objPHPExcel->getActiveSheet()->setCellValue('E'.$dong,"Tổng Tiền");		$objPHPExcel->getActiveSheet()->setCellValue('F'.$dong,number_format($tongtien));		$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'P'.$n)		->applyFromArray(			array('font'  => array(				'bold'  => true,				'size'  => 12,				'name'  => 'Arial'			))		);		// Rename worksheet		$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));		// Set active sheet index to the first sheet, so Excel opens this as the first sheet		$objPHPExcel->setActiveSheetIndex(0);					date_default_timezone_set('Asia/Ho_Chi_Minh');		// Redirect output to a client’s web browser (Excel5)		header('Content-Type: application/vnd.ms-excel');		header('Content-Disposition: attachment;filename="HOA_HONG_TRUC_TIEP_'.date('d').'_'.date('m').'_'.date('Y').'_'.date('H').'_'.date('i').'.xls"');		header('Cache-Control: max-age=0');		// If you're serving to IE 9, then the following may be needed		header('Cache-Control: max-age=1');		// If you're serving to IE over SSL, then the following may be needed		header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past		header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified		header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1		header ('Pragma: public'); // HTTP/1.0		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');		$objWriter->save('php://output');				exit;	}	}